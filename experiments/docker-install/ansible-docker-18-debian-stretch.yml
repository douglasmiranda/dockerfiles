---

# These are Ansible tasks for installing Docker on Debian Stretch
# This will install Docker and its dependencies and make the necessary configurations.

- name: "Install packages to allow apt to use a repository over HTTPS"
  apt:
    name: "{{ depenencies }}"
    state: present
  vars:
    depenencies:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg2
      - software-properties-common

- name: "Add Dockerâ€™s official GPG key"
  apt_key:
    url: "https://download.docker.com/linux/debian/gpg"
    state: present

- name: "Verify that we have the key with the fingerprint"
  apt_key:
    id: 0EBFCD88
    state: present

- name: "Set up the stable repository"
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/debian stretch stable"
    state: present

- name: "Install Docker"
  apt:
    name: docker-ce=18.*
    state: present
    update_cache: yes

- name: "Create 'docker' group"
  group:
    name: "docker"
    state: present

- name: "Add remote '{{ deploy_user_username }}' user to 'docker' group"
  user:
    name: "{{ deploy_user_username }}"
    group: "docker"
    append: yes

- name: "Tell Systemd to start docker on boot"
  systemd:
    name: "docker"
    state: started
    enabled: yes

- name: "Get docker info"
  shell: docker info
  register: docker_info
  changed_when: False

# If your host is a Docker Swarm Manager:
# - name: "Create primary swarm manager"
#   shell: docker swarm init --advertise-addr {{ hostvars.devtools.ansible_eth0_1.ipv4.address }}
#   when: "docker_info.stdout.find('Swarm: inactive') != -1"


## Avanced:

# If you need to configure ufw rules to allow your Swarm Manager:
# - name: "Configure access for Swarm Manager host"
#   ufw:
#     rule: "{{ item.rule }}"
#     port: "{{ item.port }}"
#     proto: "{{ item.proto }}"
#   with_items:
#     - { rule: 'allow', port: '2376', proto: 'tcp' }
#     - { rule: 'allow', port: '2377', proto: 'tcp' }
#     - { rule: 'allow', port: '7946', proto: 'tcp' }
#     - { rule: 'allow', port: '7946', proto: 'udp' }
#     - { rule: 'allow', port: '4789', proto: 'udp' }
#   notify:
#     - "Restart ufw"

# If you need to configure ufw rules to allow your Swarm Worker:
# - name: "Configure access for Swarm Worker host"
#   ufw:
#     rule: "{{ item.rule }}"
#     port: "{{ item.port }}"
#     proto: "{{ item.proto }}"
#   with_items:
#     - { rule: 'allow', port: '2376', proto: 'tcp' }
#     - { rule: 'allow', port: '7946', proto: 'tcp' }
#     - { rule: 'allow', port: '7946', proto: 'udp' }
#     - { rule: 'allow', port: '4789', proto: 'udp' }
#   notify:
#     - "Restart ufw"

# Handler:
# - name: "Restart ufw"
#   service:
#     name: "ufw"
#     state: "restarted"

# Fix the Docker and UFW security flaw without disabling iptables
# https://github.com/chaifeng/ufw-docker
